{"version":3,"sources":["../Checkout.tsx"],"sourceRoot":"","sourcesContent":["import {\n  reactExtension,\n  Banner,\n  BlockStack,\n  Checkbox,\n  Text,\n  useApi,\n  useApplyAttributeChange,\n  useInstructions,\n  useTranslate,\n} from \"@shopify/ui-extensions-react/checkout\";\n\n// 1. Choose an extension target\nexport default reactExtension(\"purchase.checkout.block.render\", () => <Extension />);\n\nfunction Extension() {\n  const translate = useTranslate();\n  const { extension } = useApi();\n  const instructions = useInstructions();\n  const applyAttributeChange = useApplyAttributeChange();\n\n  // 2. Check instructions for feature availability, see https://shopify.dev/docs/api/checkout-ui-extensions/apis/cart-instructions for details\n  if (!instructions.attributes.canUpdateAttributes) {\n    // For checkouts such as draft order invoices, cart attributes may not be allowed\n    // Consider rendering a fallback UI or nothing at all, if the feature is unavailable\n    return (\n      <Banner title=\"checkout-ui\" status=\"warning\">\n        {translate(\"attributeChangesAreNotSupported\")}\n      </Banner>\n    );\n  }\n\n  // 3. Render a UI\n  return (\n    <BlockStack border={\"dotted\"} padding={\"tight\"}>\n      <Banner title=\"checkout-ui\">\n        {translate(\"welcome\", {\n          target: <Text emphasis=\"italic\">{extension.target}</Text>,\n        })}\n      </Banner>\n      <Checkbox onChange={onCheckboxChange}>{translate(\"iWouldLikeAFreeGiftWithMyOrder\")}</Checkbox>\n    </BlockStack>\n  );\n\n  async function onCheckboxChange(isChecked) {\n    // 4. Call the API to modify checkout\n    const result = await applyAttributeChange({\n      key: \"requestedFreeGift\",\n      type: \"updateAttribute\",\n      value: isChecked ? \"yes\" : \"no\",\n    });\n    console.log(\"applyAttributeChange result\", result);\n  }\n}\n"],"names":["reactExtension","Extension","translate","useTranslate","extension","useApi","instructions","useInstructions","applyAttributeChange","useApplyAttributeChange","attributes","canUpdateAttributes","Banner","title","status","BlockStack","border","padding","target","Text","emphasis","Checkbox","onChange","onCheckboxChange","isChecked","result","key","type","value","console","log"],"mappings":";;;;+BAYA,gCAAgC;AAChC;;;eAAA;;;;yBAHO;;;;;;MAGP,WAAeA,IAAAA,0BAAc,EAAC,kCAAkC,kBAAM,oBAACC;AAEvE,SAASA;IACP,MAAMC,YAAYC,IAAAA,wBAAY;IAC9B,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,kBAAM;IAC5B,MAAMC,eAAeC,IAAAA,2BAAe;IACpC,MAAMC,uBAAuBC,IAAAA,mCAAuB;IAEpD,6IAA6I;IAC7I,IAAI,CAACH,aAAaI,UAAU,CAACC,mBAAmB,EAAE;QAChD,iFAAiF;QACjF,oFAAoF;QACpF,qBACE,oBAACC,kBAAM;YAACC,OAAM;YAAcC,QAAO;WAChCZ,UAAU;IAGjB;IAEA,iBAAiB;IACjB,qBACE,oBAACa,sBAAU;QAACC,QAAQ;QAAUC,SAAS;qBACrC,oBAACL,kBAAM;QAACC,OAAM;OACXX,UAAU,WAAW;QACpBgB,sBAAQ,oBAACC,gBAAI;YAACC,UAAS;WAAUhB,UAAUc,MAAM;IACnD,mBAEF,oBAACG,oBAAQ;QAACC,UAAUC;OAAmBrB,UAAU;IAIrD,eAAeqB,iBAAiBC,SAAS;QACvC,qCAAqC;QACrC,MAAMC,SAAS,MAAMjB,qBAAqB;YACxCkB,KAAK;YACLC,MAAM;YACNC,OAAOJ,YAAY,QAAQ;QAC7B;QACAK,QAAQC,GAAG,CAAC,+BAA+BL;IAC7C;AACF"}